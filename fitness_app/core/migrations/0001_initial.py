# Generated by Django 5.0.1 on 2024-01-21 14:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('exercise_type', models.CharField(max_length=255)),
                ('is_bodyweight', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Muscle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('card_information', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('role', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='core_user_set', related_query_name='core_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='core_user_set', related_query_name='core_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DietLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calories_consumed', models.DecimalField(decimal_places=2, max_digits=6)),
                ('macronutrients', models.JSONField()),
                ('daily_steps', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
                ('weight_target_min', models.DecimalField(decimal_places=2, max_digits=5)),
                ('weight_target_max', models.DecimalField(decimal_places=2, max_digits=5)),
                ('bf_target_min', models.DecimalField(decimal_places=2, max_digits=5)),
                ('bf_target_max', models.DecimalField(decimal_places=2, max_digits=5)),
                ('weight_change_rate_min', models.DecimalField(decimal_places=2, max_digits=4)),
                ('weight_change_rate_max', models.DecimalField(decimal_places=2, max_digits=4)),
                ('calories_consumed_target_min', models.DecimalField(decimal_places=2, max_digits=6)),
                ('calories_consumed_target_max', models.DecimalField(decimal_places=2, max_digits=6)),
                ('macronutrients_target', models.JSONField()),
                ('daily_steps_target_min', models.IntegerField()),
                ('daily_steps_target_max', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_name', models.CharField(max_length=255)),
                ('measurement_value', models.DecimalField(decimal_places=2, max_digits=6)),
                ('date', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseMuscle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('impact_level', models.IntegerField()),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.exercise')),
                ('muscle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.muscle')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('duration', models.CharField(max_length=255)),
                ('completion_percentage', models.IntegerField()),
                ('adherence_percentage', models.IntegerField()),
                ('type', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrainerProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('duration', models.CharField(max_length=255)),
                ('completion_percentage', models.IntegerField()),
                ('adherence_percentage', models.IntegerField()),
                ('type', models.CharField(max_length=255)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.program')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SetLogged',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_number', models.IntegerField()),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('reps', models.IntegerField()),
                ('RPE', models.DecimalField(decimal_places=1, max_digits=3)),
                ('date', models.DateTimeField()),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.exercise')),
                ('trainer_program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.trainerprogram')),
            ],
        ),
        migrations.CreateModel(
            name='RunningSetsLogged',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_number', models.IntegerField()),
                ('distance', models.DecimalField(decimal_places=2, max_digits=6)),
                ('sets', models.IntegerField()),
                ('rest_time', models.IntegerField()),
                ('target_time', models.DecimalField(decimal_places=2, max_digits=6)),
                ('target_pace', models.DecimalField(decimal_places=2, max_digits=6)),
                ('target_RPE', models.DecimalField(decimal_places=1, max_digits=3)),
                ('target_heart_rate', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('trainer_program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.trainerprogram')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restday', models.BooleanField()),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.program')),
            ],
        ),
        migrations.CreateModel(
            name='SetsGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_number_min', models.IntegerField()),
                ('set_number_max', models.IntegerField()),
                ('weight_min', models.DecimalField(decimal_places=2, max_digits=5)),
                ('weight_max', models.DecimalField(decimal_places=2, max_digits=5)),
                ('reps_min', models.IntegerField()),
                ('reps_max', models.IntegerField()),
                ('target_RPE_min', models.DecimalField(decimal_places=1, max_digits=3)),
                ('target_RPE_max', models.DecimalField(decimal_places=1, max_digits=3)),
                ('date', models.DateTimeField()),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.exercise')),
                ('training_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.trainingday')),
            ],
        ),
        migrations.CreateModel(
            name='RunningSetsGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_number_min', models.IntegerField()),
                ('set_number_max', models.IntegerField()),
                ('distance_min', models.DecimalField(decimal_places=2, max_digits=6)),
                ('distance_max', models.DecimalField(decimal_places=2, max_digits=6)),
                ('sets_min', models.IntegerField()),
                ('sets_max', models.IntegerField()),
                ('rest_time_min', models.IntegerField()),
                ('rest_time_max', models.IntegerField()),
                ('target_time_min', models.DecimalField(decimal_places=2, max_digits=6)),
                ('target_time_max', models.DecimalField(decimal_places=2, max_digits=6)),
                ('target_RPE_min', models.DecimalField(decimal_places=1, max_digits=3)),
                ('target_RPE_max', models.DecimalField(decimal_places=1, max_digits=3)),
                ('target_heart_rate_min', models.IntegerField()),
                ('target_heart_rate_max', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('training_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.trainingday')),
            ],
        ),
        migrations.CreateModel(
            name='WeightLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('bf_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
